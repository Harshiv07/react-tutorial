{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","onFormSubmit","preventDefault","handleSubmit","state","initialState","onSubmit","for","type","id","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"0NAEMA,EAAc,WAChB,OACE,+BACE,4BACE,oCACA,sCAMJC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAMR,OAAO,+BAAQJ,IAgBJU,E,uKAZD,IAAD,EACoCC,KAAKZ,MAAxCE,EADD,EACCA,cAAeQ,EADhB,EACgBA,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAPhDG,a,OC2BLC,E,kDArDX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IAUVe,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBV,EADY,EACZA,KAAMW,EADM,EACNA,MAEd,EAAKC,SAAL,eACKZ,EAAQW,KAfE,EAmBnBE,aAAe,SAACJ,GACZA,EAAMK,iBAEN,EAAKrB,MAAMsB,aAAa,EAAKC,OAC7B,EAAKJ,SAAS,EAAKK,eApBnB,EAAKA,aAAe,CAChBjB,KAAM,GACNC,IAAK,IAGT,EAAKe,MAAQ,EAAKC,aARH,E,qDA0BT,IAAD,EACiBZ,KAAKW,MAAnBhB,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,0BAAMiB,SAAUb,KAAKQ,cACjB,2BAAOM,IAAI,QAAX,QACA,2BACIC,KAAK,OACLpB,KAAK,OACLqB,GAAG,OACHV,MAAOX,EACPsB,SAAUjB,KAAKG,eACnB,2BAAOW,IAAI,OAAX,OACA,2BACIC,KAAK,OACLpB,KAAK,MACLqB,GAAG,MACHV,MAAOV,EACPqB,SAAUjB,KAAKG,eACnB,4BAAQY,KAAK,UAAb,e,GA9CGd,aCuCJiB,E,4MApCXP,MAAQ,CACJQ,WAAY,I,EAGhBrB,gBAAkB,SAAAL,GAAU,IAChB0B,EAAe,EAAKR,MAApBQ,WAER,EAAKZ,SAAS,CACVY,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM7B,Q,EAKzBiB,aAAe,SAAAW,GACX,EAAKd,SAAS,CAACY,WAAW,GAAD,mBAAM,EAAKR,MAAMQ,YAAjB,CAA6BE,O,uDAGhD,IACEF,EAAenB,KAAKW,MAApBQ,WAER,OACI,yBAAKI,UAAU,aACX,8CACA,kFACA,kBAAC,EAAD,CACIjC,cAAe6B,EACfrB,gBAAiBE,KAAKF,kBAE1B,wCACA,kBAAC,EAAD,CAAMY,aAAcV,KAAKU,oB,GA/BvBT,a,MCClBuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0aab7122.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Job</th>\n        </tr>\n      </thead>\n    )\n}\n\nconst TableBody = props => {\n    const rows = props.characterData.map((row, index) => {\n      return (\n        <tr key={index}>\n          <td>{row.name}</td>\n          <td>{row.job}</td>\n          <td>\n            <button onClick={() => props.removeCharacter(index)}>Delete</button>\n          </td>\n        </tr>\n      )\n    })\n  \n    return <tbody>{rows}</tbody>\n  }\n\nclass Table extends Component {\n    render() {\n      const { characterData, removeCharacter } = this.props\n  \n      return (\n        <table>\n          <TableHeader />\n          <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n        </table>\n      )\n    }\n  }\n\nexport default Table;","import React, {Component} from 'react';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.initialState = {\n            name: '',\n            job: ''\n        };\n\n        this.state = this.initialState;\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name] : value\n        });\n    }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        \n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const { name, job } = this.state; \n\n        return (\n            <form onSubmit={this.onFormSubmit}>\n                <label for=\"name\">Name</label>\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    id=\"name\"\n                    value={name} \n                    onChange={this.handleChange} />\n                <label for=\"job\">Job</label>\n                <input \n                    type=\"text\" \n                    name=\"job\" \n                    id=\"job\"\n                    value={job} \n                    onChange={this.handleChange} />\n                <button type=\"submit\">\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n    state = {\n        characters: []\n    };\n\n    removeCharacter = index => {\n        const { characters } = this.state;\n    \n        this.setState({\n            characters: characters.filter((character, i) => { \n                return i !== index;\n            })\n        });\n    }\n\n    handleSubmit = character => {\n        this.setState({characters: [...this.state.characters, character]});\n    }\n\n    render() {\n        const { characters } = this.state;\n        \n        return (\n            <div className=\"container\">\n                <h1>React Tutorial</h1>\n                <p>Add a character with a name and a job to the table.</p>\n                <Table\n                    characterData={characters}\n                    removeCharacter={this.removeCharacter}\n                />\n                <h3>New Role</h3>\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}